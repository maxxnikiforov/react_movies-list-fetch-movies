{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","MoviesList","props","movies","map","imdbID","API","getMovie","title","a","fetch","response","json","FindMovie","addMovie","repeat","changeRepeat","useState","setMovie","query","setQuery","error","setError","findMovie","Submit","event","preventDefault","onSubmit","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","App","setMovies","setRepeat","useCallback","find","item","list","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac516357.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API = 'https://www.omdbapi.com/?apikey=6717544a&t=';\n\nexport async function getMovie(title: string): Promise<Movie> {\n  const response = await fetch(`${API}${title}`);\n  const movie = await response.json();\n\n  return movie;\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n  repeat: boolean;\n  changeRepeat: () => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  addMovie,\n  repeat,\n  changeRepeat,\n}) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState('');\n\n  const findMovie = async () => {\n    changeRepeat();\n    const response = await getMovie(query);\n\n    if ('Error' in response) {\n      setError('Error');\n    } else {\n      setMovie(response);\n    }\n  };\n\n  const Submit = async (event: React.SyntheticEvent) => {\n    event.preventDefault();\n\n    if (movie) {\n      addMovie(movie);\n      setMovie(null);\n      setQuery('');\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={Submit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input',\n                { 'is-danger': error || repeat })}\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setError('');\n                changeRepeat();\n              }}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n          {repeat && (\n            <p className=\"help is-danger\">\n              That Movie is already in the List\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import React, { useState, useCallback } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [repeat, setRepeat] = useState(false);\n\n  const addMovie = useCallback((movie) => {\n    const inList = movies.find((item) => item.imdbID === movie.imdbID);\n\n    if (!inList) {\n      setMovies((list) => [...list, movie]);\n    } else {\n      setRepeat(true);\n    }\n  }, [movies]);\n\n  const changeReapet = () => {\n    setRepeat(false);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n          repeat={repeat}\n          changeRepeat={changeReapet}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}